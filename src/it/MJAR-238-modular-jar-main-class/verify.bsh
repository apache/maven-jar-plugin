/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import java.io.*;
import java.lang.module.*;
import java.util.jar.*;

boolean result = true;
JarFile jar;

try
{
    File target = new File( basedir, "target" );
    if ( !target.exists() || !target.isDirectory() )
    {
        System.err.println( "target file is missing or not a directory." );
        return false;
    }

    File artifact = new File( target, "mjar-238-modular-jar-main-class-1.0-SNAPSHOT.jar" );
    if ( !artifact.exists() || artifact.isDirectory() )
    {
        System.err.println( "artifact file is missing or a directory." );
        return false;
    }

    jar = new JarFile( artifact );

    Attributes manifest = jar.getManifest().getMainAttributes();

    if ( !"myproject.HelloWorld".equals( manifest.get( Attributes.Name.MAIN_CLASS ) ) )
    {
        System.err.println( "Manifest main class attribute not equals myproject.HelloWorld" );
        return false;
    }

    InputStream moduleDescriptorInputStream = jar.getInputStream( jar.getEntry( "module-info.class" ) );
    ModuleDescriptor moduleDescriptor = ModuleDescriptor.read( moduleDescriptorInputStream );

    if ( !"myproject.HelloWorld".equals( moduleDescriptor.mainClass().orElse( null ) ) )
    {
        System.err.println( "Module descriptor main class not equals myproject.HelloWorld" );
        return false;
    }
}
catch( Throwable e )
{
    e.printStackTrace();
    result = false;
}
finally
{
    if ( jar != null )
    {
        jar.close();
    }
}

return result;
